name: Docker build and release

on:
  # Manual trigger with a tag name input
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Tag of an image to build."
        type: string
        required: true
  push:
    branches:
      - main
    tags:
      - v**

# Cancel only jobs in PRs
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.event_name != 'push' || github.ref != 'refs/heads/main' }}

# Use bash with more verbose commands output
defaults:
  run:
    shell: 'bash -ex {0}'

# Set workflow permissions
permissions:
  packages: write
  contents: read

jobs:

  build-images:
    name: Build and Push Docker Images
    runs-on: matterlabs-ci-runner-high-performance
    strategy:
      fail-fast: false
      matrix:
        component:
          - zksync-os-prover-fri
          - zksync-os-prover-snark
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: "recursive"

      - name: login to Docker registries
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          gcloud auth configure-docker us-docker.pkg.dev -q

      - name: Login to GitHub Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        env:
          DOCKER_METADATA_SHORT_SHA_LENGTH: 7
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.component }}
            us-docker.pkg.dev/matterlabs-infra/matterlabs-docker/${{ matrix.component }}
          tags: |
            type=raw,value=${{ inputs.tag_name }},enable=${{ inputs.tag_name != '' }}
            type=ref,event=tag
            type=raw,value=latest,enable=${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
            type=sha,format=short,prefix=,suffix=-{{date 'x'}},enable=${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
            type=ref,event=pr

      - name: Define whether to save cache
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        id: set-cache-to
        run: echo "cache-to=type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ matrix.component }}:buildcache,mode=max" >> "${GITHUB_OUTPUT}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Build and push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          load: true
          build-args: |
            SCCACHE_GCS_BUCKET=matterlabs-infra-sccache-storage
            SCCACHE_GCS_SERVICE_ACCOUNT=gha-ci-runners@matterlabs-infra.iam.gserviceaccount.com
            SCCACHE_GCS_RW_MODE=READ_WRITE
            RUSTC_WRAPPER=sccache
          file: docker/${{ matrix.component }}/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: 'type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ matrix.component }}:buildcache'
          cache-to: ${{ steps.set-cache-to.outputs.cache-to }}
